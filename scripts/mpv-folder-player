#!/bin/sh

# MIT License
#
# Copyright (c) 2025 Alexey Gumirov
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# This script is used to play media files from a folder
# Rofi is used to select a folder and a file to play
# By default, the script will search for folders with the name "Music" or "Videos" in the HOME directory and in the mounted media
# In the mounted media the depth of the search is limited to 2 levels

MPV_SOCKET="/tmp/mpv_socket"
MPV_CONTROL_SCRIPT="$(dirname "$0")/mpv-control"
ROFI_FONT="JetBrainsMono Nerd Font 14"

rofi_launch(){
    rofi -dmenu -font "${ROFI_FONT}" -yoffset 24 -no-fixed-num-lines -p "${1}" -location 2 -theme-str 'window {width: 70%;}' -i
}

notification(){
    notify-send "Now Playing:" "${1} ☕️🎶"
}

MEDIA_PATH="/run/media/$(id -un)"

main(){
    chose_mode=$(printf "Music\nVideo" | rofi_launch "Play")
    case "$chose_mode" in
        "Video")
            if lsblk -l | grep -q "$MEDIA_PATH"; then
                # By default, the script will search for folders with the name "Videos" in the HOME directory and in the mounted media
                mounted_folders_list="${HOME}/Videos
$(find "$MEDIA_PATH" -maxdepth 2 -type d -iname "video*" 2>/dev/null)"
            else
                mounted_folders_list="${HOME}/Videos"
            fi
            FOLDER=$(printf "%s" "$mounted_folders_list" | sort -u | rofi_launch "Select")
            ;;
        *)
            if lsblk -l | grep -q "$MEDIA_PATH"; then
                # By default, the script will search for folders with the name "Music" in the HOME directory and in the mounted media
                mounted_folders_list="${HOME}/Music
$(find "$MEDIA_PATH" -maxdepth 2 -type d -iname "music*" 2>/dev/null)"
            else
                mounted_folders_list="${HOME}/Music"
            fi
            FOLDER=$(printf "%s" "$mounted_folders_list" | sort -u | rofi_launch "Select")
            ;;
    esac
    if [ "$chose_mode" = "Video" ]; then
        list_files=$(fd -t f -S +40M . "$FOLDER"; fd -t d . "$FOLDER") # List only files larger than 40M. You can change the size of the files to be displayed
        chosen=$(echo "$list_files" | sed "s#${FOLDER}/##; s/\/\$//" | sort | rofi_launch "Select")
        if [ -n "$chosen" ]; then
            echo "${FOLDER}/${chosen}"
            "${MPV_CONTROL_SCRIPT}" -quit
	    notification "${chosen}"
            mpv --quiet --display-tags="Artist,Album,Title" --input-ipc-server="${MPV_SOCKET}" "${FOLDER}/${chosen}" &
        else
            exit 0
        fi
    else
        list_files=$(fd -t f -S +40M . "$FOLDER"; fd -t d . "$FOLDER") # List only files larger than 40M. You can change the size of the files to be displayed
        chosen=$(echo "$list_files" | sed "s#${FOLDER}/##; s/\/\$//" | sort | rofi_launch "Select")
        if [ -n "$chosen" ]; then
            "${MPV_CONTROL_SCRIPT}" -quit
            if pgrep -f "mpv --vid=no"; then
                pkill -f "mpv --vid=no" && sleep 1
            fi
	    notification "${chosen}"
            mpv --vid=no --quiet --display-tags="Artist,Album,Title" --input-ipc-server="${MPV_SOCKET}" "${FOLDER}/${chosen}" &
        else
            exit 0
        fi
    fi
}

main
